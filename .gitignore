# Ignore pbp data
data/*
!data/pbp
data/pbp/*
!data/baselines
!data/slates

# Secrets files:
.env

# Annoying Mac OSX files
.DS_Store

# Rust files
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Python/IPython
# ipython configs:
# only keep the startup scripts

# Jupyter Notebook
.ipynb_checkpoints

ipython/ipython_config.py
ipython/ipython_kernel_config.py
ipython/jupyter_notebook_config.py
ipython/log
ipython/pid
ipython/security
ipython/startup
!ipython/profile_default
ipython/profile_default/*
!ipython/profile_default/startup


# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Translations
*.mo
*.pot

# Environments
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
pypyvenv/

# mypy
.mypy_cache/
.dmypy.json
dmypy.json
